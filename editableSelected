/**
 *
 * 调用方式, $(".dropDown").dropDown(data, name, editable)
 * 主要参数说明:
 * 		@param data
 * 			type: []
 * 			example:[{key: 'key1',value: 'val1}]
 * 			explain: 带有下拉选项数据的数组，key为表单提交时提交的数据，value为展示在下拉框里的文本
 *
 *		@param name
 *			type: String
 *			explain: 表单提交时用到的name属性
 *
 *		@param editable
 *			type: Number
 *			explain: 编辑类型，默认为 0-editable
 *						只能下拉选择      1-input[readonly]
 *						只读     2-input[disabled]
 *
 * */

define(function(){
	"use strict";
	var dropdown = function(con, data, name, editable){
		var _this = this,
			args = arguments;
		for(var i in args){
			if(args[i] instanceof jQuery){
				_this.container = args[i];
			} else if(args[i] instanceof Array){
				_this.data = args[i];
			} else if(typeof args[i] == 'string'){
				_this.name = args[i];
			} else if(typeof args[i] == 'number'){
				_this.editable = args[i];
			}
		};
		if(!_this.container || _this.container.length < 0){
			console.error("container is undefined or Irregular");
			return false;
		}
		_this.data = _this.data ? _this.data : [];
		_this.editable = _this.editable == undefined ? 0 : _this.editable;

		//初始化html
		this.init();
		//绑定事件
		this.bindEvent();
		return this;
	};

	dropdown.prototype.init = function(){
		var data = this.data, li_tpl='', li = '';
		if(!!this.name){
			this.content = $('<div class="drop-content"></div>');
			this.btn = $('<a href="javascript:;" class="drop-btn">按钮</a>');
			this.hidden = $('<input type="hidden" class="drop-val" name="' + this.name + '" value="">');
			li_tpl = '<li class="drop-item" value="{key}"><a href="#">{val}</a></li>';
			for (var i = 0; i < data.length; i++) {
				li += li_tpl.replace(/\{key\}(.*)\{val\}/, function (match, group, index) {
					return data[i].key + group + data[i].value;
				});
			};
			this.list = $('<ul class="drop-list"></ul>');
			this.list.html(li);

			switch(this.editable){
				case 0:
					this.input = $('<input type="text" name="display-' + this.name + '" class="drop-result" autocomplete="off">');
					break;
				case 1:
					this.input = $('<input type="text" name="display-' + this.name + '" class="drop-result" readonly unselectable="on"  autocomplete="off">');
					break;
				case 2:
					this.input = $('<input type="text" name="display-' + this.name + '" class="drop-result" disabled autocomplete="off">');
					this.btn.addClass("disabled");
					break;
			}

			this.container.append(this.content.append(this.input, this.btn, this.hidden), this.list);
		}else{
			this.content = this.container.find(".drop-content");
			this.btn = this.container.find(".drop-btn");
			this.input = this.container.find(".drop-result");
			this.hidden = this.container.find(".drop-val");
			this.list = this.container.find(".drop-list");
		}
		if(this.input.attr("readonly")){
			this.list.append($('<li class="drop-item clear"><a href="javascript:;">清空</a></li>'));
		}
	};

	dropdown.prototype.showList = function(){
		$(".drop-list").removeClass("show");
		$(".drop-btn").removeClass("display");
		this.btn.addClass("display");
		this.list.addClass("show").find(".drop-item").removeClass("hide");
		this.autoComplete();
	};

	dropdown.prototype.hideList = function(){
		this.btn.removeClass("display");
		this.list.removeClass("show");
		this.list.find(".drop-item").each(function(){
			$(this).removeClass('hide');
		});
	};

	dropdown.prototype.bindEvent = function(){
		var _this = this;
		//点击其他地方收起下拉列表
		$(document).on('click.dropdown', (function(){
			_this.hideList();
		}));

		//按钮下拉事件
		_this.btn.click(function(evt){
			var e = evt||window.event;
			e.stopPropagation();
			if($(this).hasClass('disabled')){
				return false;
			}
			if($(this).hasClass("display")){
				_this.hideList();
			}else{
				_this.showList();
			}
		});

		//options点击事件
		_this.list.on('click', '.drop-item', function(){
			var $this = $(this);
			if($this.hasClass("clear")){
				_this.input.val('');
				_this.hidden.val('');
				$this.siblings().removeClass("cur");
			}else{
				_this.hidden.val($this.attr("value"));
				_this.input.val($this.text());
				$this.addClass("cur").siblings().removeClass("cur");
			}
			_this.hideList();
		})
		//鼠标划入添加focus状态
		.on("mouseenter", '.drop-item', function(evt){
			var e = evt || window.event;
			e.stopPropagation();
			e.preventDefault();
			$(e.target).trigger('focus');
		})
		//上下键切换focus状态
		.on('keydown', '.drop-item',function(evt){
			var e = evt || window.event,
				$a = _this.list.find(".drop-item:not(.hide) a"),
				index = $a.index($(e.target)),
				len = _this.list.find(".drop-item").length;

			e.stopPropagation();
			e.preventDefault();
			if(e.keyCode == 13){
				$(e.target).trigger("click");
				_this.input.focus();
				return;
			}
			if(e.keyCode == 40){index++;}
			if(e.keyCode == 38){index--;}
			if(index < 0){index = len -1}
			if(index >= len){index = 0;}
			$a.eq(index).trigger('focus');
		});
		_this.btn.on('keydown', function(evt){
			var e = evt||window.event;
			if(e.keyCode == 40){
				_this.list.find(".drop-item:not(.hide) a").eq(0).trigger("focus");
			}
		});
		//点击输入框事件
		_this.input.on("click", function(evt){
			var e = evt || window.event;
			e.stopPropagation();
			_this.showList();
		});

		_this.input.on('keydown', function(evt){
			var e = evt || window.event;
			//让默认事件先执行
			setTimeout(function(){
				_this.showList();
				if(e.keyCode == 40){
					_this.list.find(".drop-item:not(.hide) a").eq(0).trigger("focus");
				}
			}, 50);
			_this.hidden.val($(this).val());
		});
	};

	//TODO 输入框自动提示
	dropdown.prototype.autoComplete = function(){
		if(this.input.attr("readonly")){
			return false;
		};
		var reg = new RegExp(this.input.val().replace(/\\|\-|\.|\$|\^|\(|\)|\*|\?|\+|\||\]|\[|\{|\}/g, function(res, i){
			return '\\'+res;
		}), 'i');
		this.list.find(".drop-item:not(.clear)").each(function(){
			var $this = $(this);
			if(!reg.test($this.text())){
				$this.addClass('hide');
			}else{
				$this.removeClass("hide");
			}
		});
	};

	function dropDown(data, name, editable){
		var container = this instanceof jQuery && this.length > 0 ? this : $('body');
		var arr = [];

		container.each(function(index, item){
			arr.push(new dropdown($(item), data, name, editable));
		});

		return arr.length == 1 ? arr[0] : arr;
	};
	$.fn.dropDown = dropDown;
	return dropdown;
});
